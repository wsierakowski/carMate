extends layout

block content
  include navbar
  .row

    //-----------------------------------
    //- Car Menu
    //-----------------------------------

    .col-sm-2
      - var curCar = cars.data[cars.currentCar.id]
      h4 Select your car:
      .list-group
        each car, i in cars.data
          a.list-group-item(
            href="/consumptionnew/" + car.id,
            class={active: car.active}
          )=car.reg
    .col-sm-10
      form#consumptionForm(method="POST", action="/consumptionnew/")
        input(type="hidden", name="carid", value=curCar.id)
        .panel.panel-default
          .panel-heading
            .panel-title Calculate Fuel Consumption
          .panel-body
            if submitError
              .alert.alert-danger(role="alert")= submitError.msg
            .row
              .col-sm-6
                .form-group
                  label(for="kilometers") Kilometers
                  - var kmsval = submitError && submitError.data && submitError.data.kms ? submitError.data.kms : "";
                  input.form-control(type="number", id="kms", name="kms", placeholder="", min="0",
                    value=kmsval, onkeypress="return formUtils.isNumberKey(event)")
                .form-group
                  label(for="liters") Liters
                  - var litersval = submitError && submitError.data && submitError.data.liters ? submitError.data.liters : "";
                  input.form-control(type="number", id="liters", name="liters", placeholder="", min="0",
                    value=litersval, onkeypress="return formUtils.isNumberKey(event)")
                .form-group
                  label(for="lpkm") Liters Per 100 kms
                  input.form-control(type="number", id="lpkm", name="lpkm", placeholder="0", disabled)
              .col-sm-6
                .form-group
                  label(for="miles") Miles
                  - var milesval = submitError && submitError.data && submitError.data.miles ? submitError.data.miles : "";
                  input.form-control(type="number", id="miles", name="miles", placeholder="", min="0",
                    value=milesval, onkeypress="return formUtils.isNumberKey(event)")
                .form-group
                  label(for="gallons") Gallons
                  - var gallonsval = submitError && submitError.data && submitError.data.gallons ? submitError.data.gallons : "";
                  input.form-control(type="number", id="gallons", name="gallons", placeholder="", min="0",
                    value=gallonsval, onkeypress="return formUtils.isNumberKey(event)")
                .form-group
                  label(for="mpg") Miles Per Gallon
                  input.form-control(type="number", id="mpg", name="mpg", placeholder="0", disabled)
            button.btn.btn-default#resetBtn(type="button") Clear Form
        button.btn.btn-primary.pull-right#submitBtn(type="submit", disabled) Submit

  //- TODO: it would be better to merge these different js files
  script(src="/public/conversions.js")
  script(src="/public/formutils.js")
  script.
    var kms = document.getElementById('kms'),
        miles = document.getElementById('miles'),
        liters = document.getElementById('liters'),
        gallons = document.getElementById('gallons'),
        lpkm = document.getElementById('lpkm'),
        mpg = document.getElementById('mpg'),
        form = document.getElementById('consumptionForm'),
        resetBtn = document.getElementById('resetBtn');
        submitBtn = document.getElementById('submitBtn');

    var calculateMileage = function() {
      //console.log('liters.value:', liters.value, 'kms.value:', kms.value);
      if (liters.value !== "" && kms.value !== "") {
        lpkm.value = converter.getConsumption(parseFloat(liters.value), parseFloat(kms.value));
        mpg.value = converter.getConsumptionMpg(parseFloat(liters.value), parseFloat(kms.value));
        submitBtn.removeAttribute('disabled');
      } else {
        lpkm.value = mpg.value = "";
        submitBtn.setAttribute('disabled', true);
      }
    }

    // Resetting form doesn't automatically make disabled inputs enabled
    resetBtn.addEventListener('click', function() {
      // We set values here to "" as reset would reset values to the value
      // that was assigned to the input element when it was generated.
      // This would be a problem if after the input error we set these values - reset
      // wouldn't make them empty.

      //console.log('1 kms.value', kms.value);
      kms.removeAttribute('disabled');
      miles.removeAttribute('disabled');
      liters.removeAttribute('disabled');
      gallons.removeAttribute('disabled');
      submitBtn.setAttribute('disabled', true);

      kms.value = miles.value = liters.value = gallons.value = lpkm.value = mpg.value = "";
      console.log('2 kms.value', kms.value);
    });

    function inputChangeHandler(source, target, convertFun) {
      if (source.value === "") {
        target.removeAttribute('disabled');
        target.value = "";
      }
      else {
        target.setAttribute('disabled', false);
        target.value = convertFun(parseFloat(source.value));
      }
      calculateMileage();
    }

    function kmsHandler() {inputChangeHandler(kms, miles, converter.kmsToMiles);}
    function milesHandler() {inputChangeHandler(miles, kms, converter.milesToKms);}
    function litersHandler() {inputChangeHandler(liters, gallons, converter.litersToGallons);}
    function gallonsHandler() {inputChangeHandler(gallons, liters, converter.gallonsToLiters);}

    kms.addEventListener('input', kmsHandler);
    miles.addEventListener('input', milesHandler);
    liters.addEventListener('input', litersHandler);
    gallons.addEventListener('input', gallonsHandler);

    // We need this in case the values in input boxes were populated from the submitError
    document.addEventListener("DOMContentLoaded", function() {
      // First we record which elements are populated, then we set the form as if it
      // was set with the 'input' events.
      var funlist = [];
      if(kms.value) funlist.push(kmsHandler);
      if(miles.value) funlist.push(milesHandler);
      if(liters.value) funlist.push(litersHandler);
      if(gallons.value) funlist.push(gallonsHandler);
      funlist.forEach(function(item) {item();});
      calculateMileage();
    });